[TOOL]
gametitle=Jak X (PAL)(SCES-53286)
author=Luminar
description=Makes the game boot in Debug Mode.
comment=Enables Developer/Debug Mode - Credit to Luminar for making the patch for this build.
comment=Special thanks to water111 and Vaser for their relevant research done for earlier Jak games. It helped make this possible.

//---// The following patches are on the "ELF side". //---//
// The ELF of Jak X is encrypted/packed/compressed (not sure which). It unpacks itself while booting. So analyzing it is a bit more difficult, but doable if you use a memory dump.
// If you want to patch the "early part" of memory, you should add condition (E-type extended) patches to ensure you only write after the unpacking is done.

// nop the disabling of MasterDebug, this will make MasterDebug stay 1
// Edit: We don't actually need this, and I couldn't find a way to make the game work with MasterDebug on. So this patch is commented out for now, but kept here for reference.
//patch=1,EE,00266884,word,00000000

// nop the disabling of DebugSegment, this will make DebugSegment stay 1
patch=1,EE,0026688c,word,00000000
// nop the disabling of DebugSymbols, this will make DebugSymbols stay 1
patch=1,EE,00266898,word,00000000

// 		The following patch was copied from Jak 3's patches (found the same thing in Jak X), but since it only matters with MasterDebug, we can comment it out.
// NOP SendFromBufferD call in InitListener - This is called only when MasterDebug is on
//patch=1,EE,00270470,word,00000000

// Extra console logs. Very useful.
// The E-type patch is needed because writing the patch too early causes weird problems, preventing us from booting the game.
patch=1,EE,E00027D2,extended,00282EC1
patch=1,EE,001EDA00,extended,00000001

// nop the weird function call in InitMachine that returns something but we don't use it because I rewrote the init heap function calls.
patch=1,EE,0026a054,word,00000000

// Change malloc param to 0x10, because it is like that in Jak 3 and it works.
patch=1,EE,0026a064,word,24040010

// Rewrite init heap function call for global heap.
patch=1,EE,0026a0d4,word,8e04bb40
patch=1,EE,0026a0d8,word,3c0604d2
patch=1,EE,0026a0dc,word,34c609a0
patch=1,EE,0026a0e0,word,00402825
patch=1,EE,0026a0e4,word,0c096e30
patch=1,EE,0026a0e8,word,00000000

// Rewrite init heap function call for debug heap.
patch=1,EE,0026a10c,word,3c0f0026
patch=1,EE,0026a110,word,3c0602f0
patch=1,EE,0026a114,word,8de4bb44
patch=1,EE,0026a118,word,00000000
patch=1,EE,0026a11c,word,0c096e30
patch=1,EE,0026a120,word,3c050500

// 		This was copied straight from the Jak 3 patches (I found the same place in Jak X).
// This is about changing the stack pointer
// Shoves a MIPS instruction into near the very top of the entry point
// Ghidra blows up here, but binary ninja can handle it
// Orginally at this position there is `2D E8 40 00` - `daddu $sp, $v0, $zero`
// This changes it to - `lui sp, 0x0800` Which loads the value 0x0800 to the stackpointer register, modifying it.
patch=1,EE,002665d4,word,3c1d0800

//---// The following patches are on the "GOAL side". //---//

// Make 'read-sound-info-tweaks' unable to get stuck in a while loop, by ruining the loop itself.
// This is needed to be able to boot the game in "debug mode". Without this patch, the game will get stuck forever, after printing "reading sound info ..." twice.
patch=1,EE,067a69b4,word,00000000

// Make 'set-blackout-frames' always act as if the parameter was 0. The other branch will never be called.
// This gets rid of the (sometimes infinite) blackout you get when using Game... Continue... to warp to a continue-point.
patch=1,EE,00ad3834,word,00000000